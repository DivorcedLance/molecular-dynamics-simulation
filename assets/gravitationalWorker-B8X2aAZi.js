(function(){"use strict";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const q="170",V="",f="srgb",N="srgb-linear",Z="linear",k="srgb";function F(y,t,s){return Math.max(t,Math.min(s,y))}class b{constructor(t,s,i,e,h,o,c,l,n){b.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,s,i,e,h,o,c,l,n)}set(t,s,i,e,h,o,c,l,n){const r=this.elements;return r[0]=t,r[1]=e,r[2]=c,r[3]=s,r[4]=h,r[5]=l,r[6]=i,r[7]=o,r[8]=n,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],this}extractBasis(t,s,i){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,h=this.elements,o=i[0],c=i[3],l=i[6],n=i[1],r=i[4],u=i[7],_=i[2],a=i[5],x=i[8],m=e[0],p=e[3],M=e[6],C=e[1],d=e[4],w=e[7],z=e[2],S=e[5],I=e[8];return h[0]=o*m+c*C+l*z,h[3]=o*p+c*d+l*S,h[6]=o*M+c*w+l*I,h[1]=n*m+r*C+u*z,h[4]=n*p+r*d+u*S,h[7]=n*M+r*w+u*I,h[2]=_*m+a*C+x*z,h[5]=_*p+a*d+x*S,h[8]=_*M+a*w+x*I,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[1],e=t[2],h=t[3],o=t[4],c=t[5],l=t[6],n=t[7],r=t[8];return s*o*r-s*c*n-i*h*r+i*c*l+e*h*n-e*o*l}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],h=t[3],o=t[4],c=t[5],l=t[6],n=t[7],r=t[8],u=r*o-c*n,_=c*l-r*h,a=n*h-o*l,x=s*u+i*_+e*a;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/x;return t[0]=u*m,t[1]=(e*n-r*i)*m,t[2]=(c*i-e*o)*m,t[3]=_*m,t[4]=(r*s-e*l)*m,t[5]=(e*h-c*s)*m,t[6]=a*m,t[7]=(i*l-n*s)*m,t[8]=(o*s-i*h)*m,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,i,e,h,o,c){const l=Math.cos(h),n=Math.sin(h);return this.set(i*l,i*n,-i*(l*o+n*c)+o+t,-e*n,e*l,-e*(-n*o+l*c)+c+s,0,0,1),this}scale(t,s){return this.premultiply(E.makeScale(t,s)),this}rotate(t){return this.premultiply(E.makeRotation(-t)),this}translate(t,s){return this.premultiply(E.makeTranslation(t,s)),this}makeTranslation(t,s){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,s,0,0,1),this}makeRotation(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,i,s,0,0,0,1),this}makeScale(t,s){return this.set(t,0,0,0,s,0,0,0,1),this}equals(t){const s=this.elements,i=t.elements;for(let e=0;e<9;e++)if(s[e]!==i[e])return!1;return!0}fromArray(t,s=0){for(let i=0;i<9;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const E=new b,D={enabled:!0,workingColorSpace:N,spaces:{},convert:function(y,t,s){return this.enabled===!1||t===s||!t||!s||(this.spaces[t].transfer===k&&(y.r=A(y.r),y.g=A(y.g),y.b=A(y.b)),this.spaces[t].primaries!==this.spaces[s].primaries&&(y.applyMatrix3(this.spaces[t].toXYZ),y.applyMatrix3(this.spaces[s].fromXYZ)),this.spaces[s].transfer===k&&(y.r=T(y.r),y.g=T(y.g),y.b=T(y.b))),y},fromWorkingColorSpace:function(y,t){return this.convert(y,this.workingColorSpace,t)},toWorkingColorSpace:function(y,t){return this.convert(y,t,this.workingColorSpace)},getPrimaries:function(y){return this.spaces[y].primaries},getTransfer:function(y){return y===V?Z:this.spaces[y].transfer},getLuminanceCoefficients:function(y,t=this.workingColorSpace){return y.fromArray(this.spaces[t].luminanceCoefficients)},define:function(y){Object.assign(this.spaces,y)},_getMatrix:function(y,t,s){return y.copy(this.spaces[t].toXYZ).multiply(this.spaces[s].fromXYZ)},_getDrawingBufferColorSpace:function(y){return this.spaces[y].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(y=this.workingColorSpace){return this.spaces[y].workingColorSpaceConfig.unpackColorSpace}};function A(y){return y<.04045?y*.0773993808:Math.pow(y*.9478672986+.0521327014,2.4)}function T(y){return y<.0031308?y*12.92:1.055*Math.pow(y,.41666)-.055}const X=[.64,.33,.3,.6,.15,.06],Y=[.2126,.7152,.0722],L=[.3127,.329],P=new b().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),B=new b().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);D.define({[N]:{primaries:X,whitePoint:L,transfer:Z,toXYZ:P,fromXYZ:B,luminanceCoefficients:Y,workingColorSpaceConfig:{unpackColorSpace:f},outputColorSpaceConfig:{drawingBufferColorSpace:f}},[f]:{primaries:X,whitePoint:L,transfer:k,toXYZ:P,fromXYZ:B,luminanceCoefficients:Y,outputColorSpaceConfig:{drawingBufferColorSpace:f}}});class Q{constructor(t=0,s=0,i=0,e=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=i,this._w=e}static slerpFlat(t,s,i,e,h,o,c){let l=i[e+0],n=i[e+1],r=i[e+2],u=i[e+3];const _=h[o+0],a=h[o+1],x=h[o+2],m=h[o+3];if(c===0){t[s+0]=l,t[s+1]=n,t[s+2]=r,t[s+3]=u;return}if(c===1){t[s+0]=_,t[s+1]=a,t[s+2]=x,t[s+3]=m;return}if(u!==m||l!==_||n!==a||r!==x){let p=1-c;const M=l*_+n*a+r*x+u*m,C=M>=0?1:-1,d=1-M*M;if(d>Number.EPSILON){const z=Math.sqrt(d),S=Math.atan2(z,M*C);p=Math.sin(p*S)/z,c=Math.sin(c*S)/z}const w=c*C;if(l=l*p+_*w,n=n*p+a*w,r=r*p+x*w,u=u*p+m*w,p===1-c){const z=1/Math.sqrt(l*l+n*n+r*r+u*u);l*=z,n*=z,r*=z,u*=z}}t[s]=l,t[s+1]=n,t[s+2]=r,t[s+3]=u}static multiplyQuaternionsFlat(t,s,i,e,h,o){const c=i[e],l=i[e+1],n=i[e+2],r=i[e+3],u=h[o],_=h[o+1],a=h[o+2],x=h[o+3];return t[s]=c*x+r*u+l*a-n*_,t[s+1]=l*x+r*_+n*u-c*a,t[s+2]=n*x+r*a+c*_-l*u,t[s+3]=r*x-c*u-l*_-n*a,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,e){return this._x=t,this._y=s,this._z=i,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s=!0){const i=t._x,e=t._y,h=t._z,o=t._order,c=Math.cos,l=Math.sin,n=c(i/2),r=c(e/2),u=c(h/2),_=l(i/2),a=l(e/2),x=l(h/2);switch(o){case"XYZ":this._x=_*r*u+n*a*x,this._y=n*a*u-_*r*x,this._z=n*r*x+_*a*u,this._w=n*r*u-_*a*x;break;case"YXZ":this._x=_*r*u+n*a*x,this._y=n*a*u-_*r*x,this._z=n*r*x-_*a*u,this._w=n*r*u+_*a*x;break;case"ZXY":this._x=_*r*u-n*a*x,this._y=n*a*u+_*r*x,this._z=n*r*x+_*a*u,this._w=n*r*u-_*a*x;break;case"ZYX":this._x=_*r*u-n*a*x,this._y=n*a*u+_*r*x,this._z=n*r*x-_*a*u,this._w=n*r*u+_*a*x;break;case"YZX":this._x=_*r*u+n*a*x,this._y=n*a*u+_*r*x,this._z=n*r*x-_*a*u,this._w=n*r*u-_*a*x;break;case"XZY":this._x=_*r*u-n*a*x,this._y=n*a*u-_*r*x,this._z=n*r*x+_*a*u,this._w=n*r*u+_*a*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return s===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,e=Math.sin(i);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],e=s[4],h=s[8],o=s[1],c=s[5],l=s[9],n=s[2],r=s[6],u=s[10],_=i+c+u;if(_>0){const a=.5/Math.sqrt(_+1);this._w=.25/a,this._x=(r-l)*a,this._y=(h-n)*a,this._z=(o-e)*a}else if(i>c&&i>u){const a=2*Math.sqrt(1+i-c-u);this._w=(r-l)/a,this._x=.25*a,this._y=(e+o)/a,this._z=(h+n)/a}else if(c>u){const a=2*Math.sqrt(1+c-i-u);this._w=(h-n)/a,this._x=(e+o)/a,this._y=.25*a,this._z=(l+r)/a}else{const a=2*Math.sqrt(1+u-i-c);this._w=(o-e)/a,this._x=(h+n)/a,this._y=(l+r)/a,this._z=.25*a}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(F(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(i===0)return this;const e=Math.min(1,s/i);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,e=t._y,h=t._z,o=t._w,c=s._x,l=s._y,n=s._z,r=s._w;return this._x=i*r+o*c+e*n-h*l,this._y=e*r+o*l+h*c-i*n,this._z=h*r+o*n+i*l-e*c,this._w=o*r-i*c-e*l-h*n,this._onChangeCallback(),this}slerp(t,s){if(s===0)return this;if(s===1)return this.copy(t);const i=this._x,e=this._y,h=this._z,o=this._w;let c=o*t._w+i*t._x+e*t._y+h*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=o,this._x=i,this._y=e,this._z=h,this;const l=1-c*c;if(l<=Number.EPSILON){const a=1-s;return this._w=a*o+s*this._w,this._x=a*i+s*this._x,this._y=a*e+s*this._y,this._z=a*h+s*this._z,this.normalize(),this}const n=Math.sqrt(l),r=Math.atan2(n,c),u=Math.sin((1-s)*r)/n,_=Math.sin(s*r)/n;return this._w=o*u+this._w*_,this._x=i*u+this._x*_,this._y=e*u+this._y*_,this._z=h*u+this._z*_,this._onChangeCallback(),this}slerpQuaternions(t,s,i){return this.copy(t).slerp(s,i)}random(){const t=2*Math.PI*Math.random(),s=2*Math.PI*Math.random(),i=Math.random(),e=Math.sqrt(1-i),h=Math.sqrt(i);return this.set(e*Math.sin(t),e*Math.cos(t),h*Math.sin(s),h*Math.cos(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class g{constructor(t=0,s=0,i=0){g.prototype.isVector3=!0,this.x=t,this.y=s,this.z=i}set(t,s,i){return i===void 0&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(j.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(j.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,e=this.z,h=t.elements;return this.x=h[0]*s+h[3]*i+h[6]*e,this.y=h[1]*s+h[4]*i+h[7]*e,this.z=h[2]*s+h[5]*i+h[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,h=t.elements,o=1/(h[3]*s+h[7]*i+h[11]*e+h[15]);return this.x=(h[0]*s+h[4]*i+h[8]*e+h[12])*o,this.y=(h[1]*s+h[5]*i+h[9]*e+h[13])*o,this.z=(h[2]*s+h[6]*i+h[10]*e+h[14])*o,this}applyQuaternion(t){const s=this.x,i=this.y,e=this.z,h=t.x,o=t.y,c=t.z,l=t.w,n=2*(o*e-c*i),r=2*(c*s-h*e),u=2*(h*i-o*s);return this.x=s+l*n+o*u-c*r,this.y=i+l*r+c*n-h*u,this.z=e+l*u+h*r-o*n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,e=this.z,h=t.elements;return this.x=h[0]*s+h[4]*i+h[8]*e,this.y=h[1]*s+h[5]*i+h[9]*e,this.z=h[2]*s+h[6]*i+h[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,e=t.y,h=t.z,o=s.x,c=s.y,l=s.z;return this.x=e*l-h*c,this.y=h*o-i*l,this.z=i*c-e*o,this}projectOnVector(t){const s=t.lengthSq();if(s===0)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return R.copy(this).projectOnVector(t),this.sub(R)}reflect(t){return this.sub(R.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(F(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,e=this.z-t.z;return s*s+i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const e=Math.sin(s)*t;return this.x=e*Math.sin(i),this.y=Math.cos(s)*t,this.z=e*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=e,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,s*4)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,s*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,s=Math.random()*2-1,i=Math.sqrt(1-s*s);return this.x=i*Math.cos(t),this.y=s,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const R=new g,j=new Q;typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:q}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=q),self.onmessage=y=>{const{atoms:t,G:s}=y.data,i={},e=.2;for(let h=0;h<t.length;h++)for(let o=h+1;o<t.length;o++){const c=new g().subVectors(new g().fromArray(t[o].position),new g().fromArray(t[h].position)),l=Math.max(c.length(),e),n=s*t[h].mass*t[o].mass/(l*l),u=c.normalize().multiplyScalar(n);i[t[h].id]||(i[t[h].id]=[0,0,0]),i[t[o].id]||(i[t[o].id]=[0,0,0]),i[t[h].id]=i[t[h].id].map((_,a)=>_+u.toArray()[a]),i[t[o].id]=i[t[o].id].map((_,a)=>_-u.toArray()[a])}postMessage(i)}})();
