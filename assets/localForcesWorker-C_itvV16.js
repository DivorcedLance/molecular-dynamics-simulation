(function(){"use strict";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const I="170",j="",f="srgb",q="srgb-linear",Z="linear",k="srgb";function X(y,t,s){return Math.max(t,Math.min(s,y))}class b{constructor(t,s,i,n,h,u,o,l,r){b.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,s,i,n,h,u,o,l,r)}set(t,s,i,n,h,u,o,l,r){const e=this.elements;return e[0]=t,e[1]=n,e[2]=o,e[3]=s,e[4]=h,e[5]=l,e[6]=i,e[7]=u,e[8]=r,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],this}extractBasis(t,s,i){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,n=s.elements,h=this.elements,u=i[0],o=i[3],l=i[6],r=i[1],e=i[4],c=i[7],_=i[2],a=i[5],x=i[8],z=n[0],p=n[3],w=n[6],d=n[1],g=n[4],C=n[7],m=n[2],S=n[5],F=n[8];return h[0]=u*z+o*d+l*m,h[3]=u*p+o*g+l*S,h[6]=u*w+o*C+l*F,h[1]=r*z+e*d+c*m,h[4]=r*p+e*g+c*S,h[7]=r*w+e*C+c*F,h[2]=_*z+a*d+x*m,h[5]=_*p+a*g+x*S,h[8]=_*w+a*C+x*F,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[1],n=t[2],h=t[3],u=t[4],o=t[5],l=t[6],r=t[7],e=t[8];return s*u*e-s*o*r-i*h*e+i*o*l+n*h*r-n*u*l}invert(){const t=this.elements,s=t[0],i=t[1],n=t[2],h=t[3],u=t[4],o=t[5],l=t[6],r=t[7],e=t[8],c=e*u-o*r,_=o*l-e*h,a=r*h-u*l,x=s*c+i*_+n*a;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const z=1/x;return t[0]=c*z,t[1]=(n*r-e*i)*z,t[2]=(o*i-n*u)*z,t[3]=_*z,t[4]=(e*s-n*l)*z,t[5]=(n*h-o*s)*z,t[6]=a*z,t[7]=(i*l-r*s)*z,t[8]=(u*s-i*h)*z,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,i,n,h,u,o){const l=Math.cos(h),r=Math.sin(h);return this.set(i*l,i*r,-i*(l*u+r*o)+u+t,-n*r,n*l,-n*(-r*u+l*o)+o+s,0,0,1),this}scale(t,s){return this.premultiply(E.makeScale(t,s)),this}rotate(t){return this.premultiply(E.makeRotation(-t)),this}translate(t,s){return this.premultiply(E.makeTranslation(t,s)),this}makeTranslation(t,s){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,s,0,0,1),this}makeRotation(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,i,s,0,0,0,1),this}makeScale(t,s){return this.set(t,0,0,0,s,0,0,0,1),this}equals(t){const s=this.elements,i=t.elements;for(let n=0;n<9;n++)if(s[n]!==i[n])return!1;return!0}fromArray(t,s=0){for(let i=0;i<9;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const E=new b,Q={enabled:!0,workingColorSpace:q,spaces:{},convert:function(y,t,s){return this.enabled===!1||t===s||!t||!s||(this.spaces[t].transfer===k&&(y.r=A(y.r),y.g=A(y.g),y.b=A(y.b)),this.spaces[t].primaries!==this.spaces[s].primaries&&(y.applyMatrix3(this.spaces[t].toXYZ),y.applyMatrix3(this.spaces[s].fromXYZ)),this.spaces[s].transfer===k&&(y.r=T(y.r),y.g=T(y.g),y.b=T(y.b))),y},fromWorkingColorSpace:function(y,t){return this.convert(y,this.workingColorSpace,t)},toWorkingColorSpace:function(y,t){return this.convert(y,t,this.workingColorSpace)},getPrimaries:function(y){return this.spaces[y].primaries},getTransfer:function(y){return y===j?Z:this.spaces[y].transfer},getLuminanceCoefficients:function(y,t=this.workingColorSpace){return y.fromArray(this.spaces[t].luminanceCoefficients)},define:function(y){Object.assign(this.spaces,y)},_getMatrix:function(y,t,s){return y.copy(this.spaces[t].toXYZ).multiply(this.spaces[s].fromXYZ)},_getDrawingBufferColorSpace:function(y){return this.spaces[y].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(y=this.workingColorSpace){return this.spaces[y].workingColorSpaceConfig.unpackColorSpace}};function A(y){return y<.04045?y*.0773993808:Math.pow(y*.9478672986+.0521327014,2.4)}function T(y){return y<.0031308?y*12.92:1.055*Math.pow(y,.41666)-.055}const Y=[.64,.33,.3,.6,.15,.06],L=[.2126,.7152,.0722],N=[.3127,.329],P=new b().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),B=new b().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);Q.define({[q]:{primaries:Y,whitePoint:N,transfer:Z,toXYZ:P,fromXYZ:B,luminanceCoefficients:L,workingColorSpaceConfig:{unpackColorSpace:f},outputColorSpaceConfig:{drawingBufferColorSpace:f}},[f]:{primaries:Y,whitePoint:N,transfer:k,toXYZ:P,fromXYZ:B,luminanceCoefficients:L,outputColorSpaceConfig:{drawingBufferColorSpace:f}}});class D{constructor(t=0,s=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=i,this._w=n}static slerpFlat(t,s,i,n,h,u,o){let l=i[n+0],r=i[n+1],e=i[n+2],c=i[n+3];const _=h[u+0],a=h[u+1],x=h[u+2],z=h[u+3];if(o===0){t[s+0]=l,t[s+1]=r,t[s+2]=e,t[s+3]=c;return}if(o===1){t[s+0]=_,t[s+1]=a,t[s+2]=x,t[s+3]=z;return}if(c!==z||l!==_||r!==a||e!==x){let p=1-o;const w=l*_+r*a+e*x+c*z,d=w>=0?1:-1,g=1-w*w;if(g>Number.EPSILON){const m=Math.sqrt(g),S=Math.atan2(m,w*d);p=Math.sin(p*S)/m,o=Math.sin(o*S)/m}const C=o*d;if(l=l*p+_*C,r=r*p+a*C,e=e*p+x*C,c=c*p+z*C,p===1-o){const m=1/Math.sqrt(l*l+r*r+e*e+c*c);l*=m,r*=m,e*=m,c*=m}}t[s]=l,t[s+1]=r,t[s+2]=e,t[s+3]=c}static multiplyQuaternionsFlat(t,s,i,n,h,u){const o=i[n],l=i[n+1],r=i[n+2],e=i[n+3],c=h[u],_=h[u+1],a=h[u+2],x=h[u+3];return t[s]=o*x+e*c+l*a-r*_,t[s+1]=l*x+e*_+r*c-o*a,t[s+2]=r*x+e*a+o*_-l*c,t[s+3]=e*x-o*c-l*_-r*a,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,n){return this._x=t,this._y=s,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s=!0){const i=t._x,n=t._y,h=t._z,u=t._order,o=Math.cos,l=Math.sin,r=o(i/2),e=o(n/2),c=o(h/2),_=l(i/2),a=l(n/2),x=l(h/2);switch(u){case"XYZ":this._x=_*e*c+r*a*x,this._y=r*a*c-_*e*x,this._z=r*e*x+_*a*c,this._w=r*e*c-_*a*x;break;case"YXZ":this._x=_*e*c+r*a*x,this._y=r*a*c-_*e*x,this._z=r*e*x-_*a*c,this._w=r*e*c+_*a*x;break;case"ZXY":this._x=_*e*c-r*a*x,this._y=r*a*c+_*e*x,this._z=r*e*x+_*a*c,this._w=r*e*c-_*a*x;break;case"ZYX":this._x=_*e*c-r*a*x,this._y=r*a*c+_*e*x,this._z=r*e*x-_*a*c,this._w=r*e*c+_*a*x;break;case"YZX":this._x=_*e*c+r*a*x,this._y=r*a*c+_*e*x,this._z=r*e*x-_*a*c,this._w=r*e*c-_*a*x;break;case"XZY":this._x=_*e*c-r*a*x,this._y=r*a*c-_*e*x,this._z=r*e*x+_*a*c,this._w=r*e*c+_*a*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+u)}return s===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],n=s[4],h=s[8],u=s[1],o=s[5],l=s[9],r=s[2],e=s[6],c=s[10],_=i+o+c;if(_>0){const a=.5/Math.sqrt(_+1);this._w=.25/a,this._x=(e-l)*a,this._y=(h-r)*a,this._z=(u-n)*a}else if(i>o&&i>c){const a=2*Math.sqrt(1+i-o-c);this._w=(e-l)/a,this._x=.25*a,this._y=(n+u)/a,this._z=(h+r)/a}else if(o>c){const a=2*Math.sqrt(1+o-i-c);this._w=(h-r)/a,this._x=(n+u)/a,this._y=.25*a,this._z=(l+e)/a}else{const a=2*Math.sqrt(1+c-i-o);this._w=(u-n)/a,this._x=(h+r)/a,this._y=(l+e)/a,this._z=.25*a}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(X(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(i===0)return this;const n=Math.min(1,s/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,n=t._y,h=t._z,u=t._w,o=s._x,l=s._y,r=s._z,e=s._w;return this._x=i*e+u*o+n*r-h*l,this._y=n*e+u*l+h*o-i*r,this._z=h*e+u*r+i*l-n*o,this._w=u*e-i*o-n*l-h*r,this._onChangeCallback(),this}slerp(t,s){if(s===0)return this;if(s===1)return this.copy(t);const i=this._x,n=this._y,h=this._z,u=this._w;let o=u*t._w+i*t._x+n*t._y+h*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=u,this._x=i,this._y=n,this._z=h,this;const l=1-o*o;if(l<=Number.EPSILON){const a=1-s;return this._w=a*u+s*this._w,this._x=a*i+s*this._x,this._y=a*n+s*this._y,this._z=a*h+s*this._z,this.normalize(),this}const r=Math.sqrt(l),e=Math.atan2(r,o),c=Math.sin((1-s)*e)/r,_=Math.sin(s*e)/r;return this._w=u*c+this._w*_,this._x=i*c+this._x*_,this._y=n*c+this._y*_,this._z=h*c+this._z*_,this._onChangeCallback(),this}slerpQuaternions(t,s,i){return this.copy(t).slerp(s,i)}random(){const t=2*Math.PI*Math.random(),s=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),h=Math.sqrt(i);return this.set(n*Math.sin(t),n*Math.cos(t),h*Math.sin(s),h*Math.cos(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class M{constructor(t=0,s=0,i=0){M.prototype.isVector3=!0,this.x=t,this.y=s,this.z=i}set(t,s,i){return i===void 0&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(V.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(V.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,n=this.z,h=t.elements;return this.x=h[0]*s+h[3]*i+h[6]*n,this.y=h[1]*s+h[4]*i+h[7]*n,this.z=h[2]*s+h[5]*i+h[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,n=this.z,h=t.elements,u=1/(h[3]*s+h[7]*i+h[11]*n+h[15]);return this.x=(h[0]*s+h[4]*i+h[8]*n+h[12])*u,this.y=(h[1]*s+h[5]*i+h[9]*n+h[13])*u,this.z=(h[2]*s+h[6]*i+h[10]*n+h[14])*u,this}applyQuaternion(t){const s=this.x,i=this.y,n=this.z,h=t.x,u=t.y,o=t.z,l=t.w,r=2*(u*n-o*i),e=2*(o*s-h*n),c=2*(h*i-u*s);return this.x=s+l*r+u*c-o*e,this.y=i+l*e+o*r-h*c,this.z=n+l*c+h*e-u*r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,n=this.z,h=t.elements;return this.x=h[0]*s+h[4]*i+h[8]*n,this.y=h[1]*s+h[5]*i+h[9]*n,this.z=h[2]*s+h[6]*i+h[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,n=t.y,h=t.z,u=s.x,o=s.y,l=s.z;return this.x=n*l-h*o,this.y=h*u-i*l,this.z=i*o-n*u,this}projectOnVector(t){const s=t.lengthSq();if(s===0)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return R.copy(this).projectOnVector(t),this.sub(R)}reflect(t){return this.sub(R.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(X(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return s*s+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const n=Math.sin(s)*t;return this.x=n*Math.sin(i),this.y=Math.cos(s)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=n,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,s*4)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,s*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,s=Math.random()*2-1,i=Math.sqrt(1-s*s);return this.x=i*Math.cos(t),this.y=s,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const R=new M,V=new D;typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:I}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=I),self.onmessage=y=>{const{atoms:t,neighbors:s,springConstant:i,rotationalConstant:n}=y.data,h={},u=new Map(t.map(o=>[o.id,o]));s.forEach(({id:o,neighbors:l})=>{const r=u.get(o);if(!r)return;const e=new M(...r.position),c=new M;l.forEach(_=>{const a=u.get(_);if(!a)return;const x=new M(...a.position),p=x.distanceTo(e)-1,d=new M().subVectors(x,e).normalize().multiplyScalar(-i*p);c.add(d);const g=new M().subVectors(x,e),m=new M(-g.y,g.x,0).normalize().multiplyScalar(n);c.add(m)}),h[o]=[c.x,c.y,c.z]}),postMessage(h)}})();
